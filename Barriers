baris <- "/Users/xiaoxiaosun/Desktop/Learning/R/Barriers.txt"
texts <- readLines(baris)
#generate corpus
docs <- Corpus(VectorSource(texts))
inspect(docs)

#functions outside tm package needs to be included in function content_transformer
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
# Convert the text to lower case

docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers

docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords

docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word

# specify your stopwords as a character vector
#docs <- tm_map(docs, removeWords, c("blabla1", "blabla2")) 

# Remove punctuations
docs <- tm_map(docs, removePunctuation)

# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)

# Text stemming
docs <- tm_map(docs, stemDocument)


dtm <- TermDocumentMatrix(docs)
#generate a matrix

m <- as.matrix(dtm)
#sort the matrix in decreasing order

v <- sort(rowSums(m),decreasing=TRUE)
#
d <- data.frame(word = names(v),freq=v)

head(d, 10)

#generate ramdom number
set.seed(1234)

wordcloud(words = d$word, freq = d$freq, min.freq = 2, max.words=200, random.order=FALSE, rot.per=0.5, colors=brewer.pal(8, "Dark2"))
          
          
          
